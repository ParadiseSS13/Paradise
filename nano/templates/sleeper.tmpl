<!-- 
Title: Sleeper Status UI 
Used In File(s): \code\game\machinery\Sleeper.dm
 -->
<h3>Sleeper Status</h3>

<div class="statusDisplay">
	{{if !data.hasOccupant}}
		<div class="line">Sleeper Unoccupied</div>
	{{else}}
		<div class="line">
			{{:data.occupant.name}}&nbsp;=>&nbsp;
			{{if data.occupant.stat == 0}}
				<span class="good">Conscious</span>
			{{else data.occupant.stat == 1}}
				<span class="average">Unconscious</span>
			{{else}}
				<span class="bad">DEAD</span>
			{{/if}}
		</div>
	
			<div class="line">
				<div class="statusLabel">Health:</div>
				{{if data.occupant.health >= data.occupant.maxHealth}}
					{{:helper.displayBar(data.occupant.health, 0, data.occupant.maxHealth, 'good')}}
				{{else data.occupant.health > 0}}
					{{:helper.displayBar(data.occupant.health, 0, data.occupant.maxHealth, 'average')}}
				{{else data.occupant.health >= data.minhealth}}
					{{:helper.displayBar(data.occupant.health, 0, data.occupant.minHealth, 'average alignRight')}}
				{{else}}
					{{:helper.displayBar(data.occupant.health, 0, data.occupant.minHealth, 'bad alignRight')}}
				{{/if}}
				<div class="statusValue">{{:helper.round(data.occupant.health)}}</div>
			</div>
		
			<div class="line">
				<div class="statusLabel">=&gt; Brute Damage:</div>
				{{:helper.displayBar(data.occupant.bruteLoss, 0, data.occupant.maxHealth, 'bad')}}
				<div class="statusValue">{{:helper.round(data.occupant.bruteLoss)}}</div>
			</div>
		
			<div class="line">
				<div class="statusLabel">=&gt; Resp. Damage:</div>
				{{:helper.displayBar(data.occupant.oxyLoss, 0, data.occupant.maxHealth, 'bad')}}
				<div class="statusValue">{{:helper.round(data.occupant.oxyLoss)}}</div>
			</div>
		
			<div class="line">
				<div class="statusLabel">=&gt; Toxin Damage:</div>
				{{:helper.displayBar(data.occupant.toxLoss, 0, data.occupant.maxHealth, 'bad')}}
				<div class="statusValue">{{:helper.round(data.occupant.toxLoss)}}</div>
			</div>
		
			<div class="line">
				<div class="statusLabel">=&gt; Burn Severity:</div>
				{{:helper.displayBar(data.occupant.fireLoss, 0, data.occupant.maxHealth, 'bad')}}
				<div class="statusValue">{{:helper.round(data.occupant.fireLoss)}}</div>
			</div>
			
			<br>
			<div class="line">
			<!--
				<div class="statusLabel">Patient Temperature:</div>
				{{if data.occupant.temperatureSuitability == -3}}
				{{:helper.displayBar(data.occupant.bodyTemperature, 0, data.occupant.maxTemp, 'cold3')}}
				<div class="statusValue bad">{{:helper.round(data.occupant.btCelsius)}}&deg;C, {{:helper.round(data.occupant.btFaren)}}&deg;F</div>
				{{else data.occupant.temperatureSuitability == -2}}
				{{:helper.displayBar(data.occupant.bodyTemperature, 0, data.occupant.maxTemp, 'cold2')}}
				<div class="statusValue bad">{{:helper.round(data.occupant.btCelsius)}}&deg;C, {{:helper.round(data.occupant.btFaren)}}&deg;F</div>
				{{else data.occupant.temperatureSuitability == -1}}
				{{:helper.displayBar(data.occupant.bodyTemperature, 0, data.occupant.maxTemp, 'cold1')}}
				<div class="statusValue">{{:helper.round(data.occupant.btCelsius)}}&deg;C, {{:helper.round(data.occupant.btFaren)}}&deg;F</div>
				{{else data.occupant.temperatureSuitability == 0}}
				{{:helper.displayBar(data.occupant.bodyTemperature, 0, data.occupant.maxTemp, 'good')}}
				<div class="statusValue">{{:helper.round(data.occupant.btCelsius)}}&deg;C, {{:helper.round(data.occupant.btFaren)}}&deg;F</div>
				{{else data.occupant.temperatureSuitability == 1}}
				{{:helper.displayBar(data.occupant.bodyTemperature, 0, data.occupant.maxTemp, 'hot1')}}
				<div class="statusValue">{{:helper.round(data.occupant.btCelsius)}}&deg;C, {{:helper.round(data.occupant.btFaren)}}&deg;F</div>
				{{else data.occupant.temperatureSuitability == 2}}
				{{:helper.displayBar(data.occupant.bodyTemperature, 0, data.occupant.maxTemp, 'hot2')}}
				<div class="statusValue bad">{{:helper.round(data.occupant.btCelsius)}}&deg;C, {{:helper.round(data.occupant.btFaren)}}&deg;F</div>
				{{else data.occupant.temperatureSuitability == 3}}
				{{:helper.displayBar(data.occupant.bodyTemperature, 0, data.occupant.maxTemp, 'hot3')}}
				<div class="statusValue bad">{{:helper.round(data.occupant.btCelsius)}}&deg;C, {{:helper.round(data.occupant.btFaren)}}&deg;F</div>
				{{/if}}
				If you can get the changing temperature bars to work right, congratulations
				-->
				<div class="statusLabel">Patient Temperature:</div>
				{{if data.occupant.temperatureSuitability == -3}}
				{{:helper.displayBar(data.occupant.bodyTemperature, 0, data.occupant.maxTemp, 'bad')}}
				<div class="statusValue bad">{{:helper.round(data.occupant.btCelsius)}}&deg;C, {{:helper.round(data.occupant.btFaren)}}&deg;F</div>
				{{else data.occupant.temperatureSuitability == -2}}
				{{:helper.displayBar(data.occupant.bodyTemperature, 0, data.occupant.maxTemp, 'average')}}
				<div class="statusValue bad">{{:helper.round(data.occupant.btCelsius)}}&deg;C, {{:helper.round(data.occupant.btFaren)}}&deg;F</div>
				{{else data.occupant.temperatureSuitability == -1}}
				{{:helper.displayBar(data.occupant.bodyTemperature, 0, data.occupant.maxTemp, 'average')}}
				<div class="statusValue">{{:helper.round(data.occupant.btCelsius)}}&deg;C, {{:helper.round(data.occupant.btFaren)}}&deg;F</div>
				{{else data.occupant.temperatureSuitability == 0}}
				{{:helper.displayBar(data.occupant.bodyTemperature, 0, data.occupant.maxTemp, 'good')}}
				<div class="statusValue">{{:helper.round(data.occupant.btCelsius)}}&deg;C, {{:helper.round(data.occupant.btFaren)}}&deg;F</div>
				{{else data.occupant.temperatureSuitability == 1}}
				{{:helper.displayBar(data.occupant.bodyTemperature, 0, data.occupant.maxTemp, 'average')}}
				<div class="statusValue">{{:helper.round(data.occupant.btCelsius)}}&deg;C, {{:helper.round(data.occupant.btFaren)}}&deg;F</div>
				{{else data.occupant.temperatureSuitability == 2}}
				{{:helper.displayBar(data.occupant.bodyTemperature, 0, data.occupant.maxTemp, 'average')}}
				<div class="statusValue bad">{{:helper.round(data.occupant.btCelsius)}}&deg;C, {{:helper.round(data.occupant.btFaren)}}&deg;F</div>
				{{else data.occupant.temperatureSuitability == 3}}
				{{:helper.displayBar(data.occupant.bodyTemperature, 0, data.occupant.maxTemp, 'bad')}}
				<div class="statusValue bad">{{:helper.round(data.occupant.btCelsius)}}&deg;C, {{:helper.round(data.occupant.btFaren)}}&deg;F</div>
				{{/if}}
			</div>
			
			
			{{if data.occupant.hasBlood}}
			
			<br>
			<div class="line">
				<div class="statusLabel">Pulse:</div> <div class="statusValue">{{:data.occupant.pulse}} bpm</div>
			</div>
			<div class="line">
				<div class="statusLabel">Blood Level:</div>
				{{if data.occupant.bloodPercent <= 60}}
					{{:helper.displayBar(data.occupant.bloodLevel, 0, data.occupant.bloodMax, 'bad')}}
				<div class="statusValue">
					{{:data.occupant.bloodPercent}}%, {{:data.occupant.bloodLevel}}cl
				</div>
				{{else data.occupant.bloodPercent <= 90}}
					{{:helper.displayBar(data.occupant.bloodLevel, 0, data.occupant.bloodMax, 'average')}}
				<div class="statusValue">
					{{:data.occupant.bloodPercent}}%, {{:data.occupant.bloodLevel}}cl
				</div>
				{{else}}
					{{:helper.displayBar(data.occupant.bloodLevel, 0, data.occupant.bloodMax, 'good')}}
				<div class="statusValue">
					{{:data.occupant.bloodPercent}}%, {{:data.occupant.bloodLevel}}cl
				</div>
				{{/if}}
			</div>
			{{/if}}
	{{/if}}
</div>

<h3>Sleeper Operation</h3>
<div class="item">
	<div class="itemLabel">
		Sleeper Status:
	</div>
	<div class="itemContent" style="width: 26%;">
		{{:helper.link('Eject Occupant', 'arrowreturnthick-1-s', {'ejectify' : 1}, data.hasOccupant ? null : 'disabled')}}
	</div>
</div>
<div class="item">&nbsp;</div>
<div class="item">
	<div class="itemLabel">
		Dialysis Beaker:
	</div>
	<div class="itemContent" style="width: 40%;">
		{{if data.isBeakerLoaded}}
			<span class="highlight">{{:helper.round(data.beakerFreeSpace)}} units of space remaining</span><br>
		{{else}}
			<span class="average"><i>No Dialysis Output Beaker Loaded</i></span>
		{{/if}}
	</div>
	<div class="itemContent" style="width: 26%;">
		{{:helper.link('Eject Beaker', 'eject', {'removebeaker' : 1}, data.isBeakerLoaded ? null : 'disabled')}}
		{{if data.isBeakerLoaded}}
		<div class="line">
			<div class="itemContent">
				{{:helper.link('On', 'power', {'togglefilter' : 1}, data.occupant.hasBlood ? (data.dialysis ? 'selected' : null) : 'disabled')}}{{:helper.link('Off', 'close', {'togglefilter' : 1}, data.dialysis ? null : 'selected')}}
			</div>
		</div>
		{{/if}}
	</div>
</div>
<div class="item">
    <div class="itemLabel">
        Chemicals:
    </div>
	
    {{for data.chemicals}}
	<div class="line"><b>{{:value.title}}</b></div>
	<div class="line">
		{{if value.overdosing}}
            {{:helper.displayBar(value.occ_amount, 0, data.maxchem, 'bad')}}
		{{else value.od_warning}}
            {{:helper.displayBar(value.occ_amount, 0, data.maxchem, 'average')}}
		{{else}}
            {{:helper.displayBar(value.occ_amount, 0, data.maxchem, 'good')}}
		{{/if}}
        <div class="statusValue">{{:value.pretty_amount}}/{{:data.maxchem}}</div>
		<br>
	</div>
	<div class="line">
		<div class="itemContent">
			{{:helper.link('5', 'gear', {'chemical' : value.id, 'amount' : 5}, (!value.injectable || ((value.occ_amount + 5) > data.maxchem)) ? 'disabled' : null)}}
			{{:helper.link('10', 'gear', {'chemical' : value.id, 'amount' : 10}, (!value.injectable || ((value.occ_amount + 10) > data.maxchem)) ? 'disabled' : null)}}
		</div>
	</div>
    {{/for}}
</div>

